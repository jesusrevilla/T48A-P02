# -*- coding: utf-8 -*-
"""numpy_ejercicios.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pO54lj4Hq1E6WhEzWISI98mQjfxynh3v
"""

import numpy as np

def rand_int():
    return np.random.randint(0,100,10)
np.random.seed(10)
print(rand_int())

def rand_float():
    return np.random.rand(5)
np.random.seed(10)
print(rand_float())

def first_10_primes():
   primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
   return np.array(primes)
print(first_10_primes())

def squares():
     return np.arange(1, 11)**2
print(squares())

def cubes():
    return np.arange(1,11)**3
print(cubes())

def add_arrays(arr1, arr2):
    assert arr1.shape == arr2.shape
    return arr1 + arr2

arr1 = np.array([1, 2 ,3])
arr2 = np.array([4, 5, 6])
print(add_arrays(arr1, arr2))

import numpy as np

def subtract_arrays(arr1, arr2):
    assert arr1.shape == arr2.shape
    return arr1 - arr2

arr1 = np.array([4, 5, 6])
arr2 = np.array([1, 2, 3])
print(subtract_arrays(arr1, arr2))

def multiply_arrays(arr1, arr2):
    assert arr1.shape == arr2.shape
    return arr1*arr2

arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
print(multiply_arrays(arr1, arr2))

def divide_arrays(arr1, arr2):
    assert arr1.shape == arr2.shape
    assert arr1.any(0)
    assert arr2.any(0)
    return arr1/arr2

arr1 = np.array([7, 8, 9])
arr2 = np.array([1, 2, 3])
print(divide_arrays(arr1, arr2))

def stats(arr):
    assert arr.size == 5
    media = np.mean(arr)
    mediana = np.median(arr)
    std = np.std(arr)
    return (media, mediana, std)

arr = np.array([5, 6, 7, 8, 8])
print(stats(arr))

def frist_5(arr):
    assert arr.size == 10
    return arr[:5]

np.random.seed(10)
arr = np.random.rand(10)
print(frist_5(arr))